[{"ref":[4275,4533],"openedNamespaces":"[Subgroup, MulAction]","formalStatementFullname":"theorem aug_4409_end {p : ℕ} {G : Type u_1} [Group G] {N : Subgroup G} {P : Sylow p G} {Q : Sylow p G}\n    {hP : (P : Subgroup G) ≤ N} {hQ : (Q : Subgroup G) ≤ N} (h : Sylow.subtype P hP = Sylow.subtype Q hQ) : P = Q :=\n  sorry","formalStatement":"theorem aug_4409_end {p : ℕ} {G : Type u_1} [Group G] {N : Subgroup G} {P : Sylow p G} {Q : Sylow p G}\n    {hP : (P : Subgroup G) ≤ N} {hQ : (Q : Subgroup G) ≤ N} (h : Sylow.subtype P hP = Sylow.subtype Q hQ) : P = Q :=\n  sorry","formalProofFullname":"theorem aug_4409_end {p : ℕ} {G : Type u_1} [Group G] {N : Subgroup G} {P : Sylow p G} {Q : Sylow p G}\n    {hP : (P : Subgroup G) ≤ N} {hQ : (Q : Subgroup G) ≤ N} (h : Sylow.subtype P hP = Sylow.subtype Q hQ) : P = Q :=\n  by\n  rw [SetLike.ext_iff] at h ⊢\n  exact fun g => ⟨fun hg => (h ⟨g, hP hg⟩).mp hg, fun hg => (h ⟨g, hQ hg⟩).mpr hg⟩","formalProof":"theorem aug_4409_end {p : ℕ} {G : Type u_1} [Group G] {N : Subgroup G} {P : Sylow p G} {Q : Sylow p G}\n    {hP : (P : Subgroup G) ≤ N} {hQ : (Q : Subgroup G) ≤ N} (h : Sylow.subtype P hP = Sylow.subtype Q hQ) : P = Q :=\n  by\n  rw [SetLike.ext_iff] at h ⊢\n  exact fun g => ⟨fun hg => (h ⟨g, hP hg⟩).mp hg, fun hg => (h ⟨g, hQ hg⟩).mpr hg⟩"},{"ref":[9266,9742],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_9395_end {p : ℕ} {G : Type u_1} [Group G] {g : G} {P : Sylow p G} :\n    g • P = P ↔ g ∈ Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_9395_end {p : ℕ} {G : Type u_1} [Group G] {g : G} {P : Sylow p G} :\n    g • P = P ↔ g ∈ Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_9395_end {p : ℕ} {G : Type u_1} [Group G] {g : G} {P : Sylow p G} :\n    g • P = P ↔ g ∈ Subgroup.normalizer (P : Subgroup G) :=\n  by\n  rw [eq_comm, SetLike.ext_iff, ← inv_mem_iff (G := G) (H := normalizer P.toSubgroup), mem_normalizer_iff, inv_inv]\n  exact\n    forall_congr' fun h =>\n      iff_congr Iff.rfl\n        ⟨fun ⟨a, b, c⟩ => c ▸ by simpa [mul_assoc] using b, fun hh =>\n          ⟨(MulAut.conj g)⁻¹ h, hh, MulAut.apply_inv_self G (MulAut.conj g) h⟩⟩","formalProof":"theorem aug_9395_end {p : ℕ} {G : Type u_1} [Group G] {g : G} {P : Sylow p G} :\n    g • P = P ↔ g ∈ Subgroup.normalizer (P : Subgroup G) :=\n  by\n  rw [eq_comm, SetLike.ext_iff, ← inv_mem_iff (G := G) (H := normalizer P.toSubgroup), mem_normalizer_iff, inv_inv]\n  exact\n    forall_congr' fun h =>\n      iff_congr Iff.rfl\n        ⟨fun ⟨a, b, c⟩ => c ▸ by simpa [mul_assoc] using b, fun hh =>\n          ⟨(MulAut.conj g)⁻¹ h, hh, MulAut.apply_inv_self G (MulAut.conj g) h⟩⟩"},{"ref":[12108,12868],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_12366_12723 (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)]\n    (hg2 : Nat.card (Sylow p G) ≡ 1 [MOD p]) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalStatement":"theorem aug_12366_12723 (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)]\n    (hg2 : Nat.card (Sylow p G) ≡ 1 [MOD p]) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_12366_12723 (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)]\n    (hg2 : Nat.card (Sylow p G) ≡ 1 [MOD p]) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  refine Sylow.nonempty.elim fun P : Sylow p G => ?_\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  exact hg2","formalProof":"theorem aug_12366_12723 (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)]\n    (hg2 : Nat.card (Sylow p G) ≡ 1 [MOD p]) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  refine Sylow.nonempty.elim fun P : Sylow p G => ?_\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  exact hg2"},{"ref":[12108,12868],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalStatement":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  refine Sylow.nonempty.elim fun P : Sylow p G => ?_\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])","formalProof":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  refine Sylow.nonempty.elim fun P : Sylow p G => ?_\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])"},{"ref":[12108,12868],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalStatement":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  refine Sylow.nonempty.elim fun P : Sylow p G => ?_\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])","formalProof":"theorem aug_12366_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  refine Sylow.nonempty.elim fun P : Sylow p G => ?_\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])"},{"ref":[12108,12868],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalStatement":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])","formalProof":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])"},{"ref":[12108,12868],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalStatement":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])","formalProof":"theorem aug_12419_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  have : fixedPoints P.1 (Sylow p G) = { P } :=\n    Set.ext fun Q : Sylow p G =>\n      calc\n        Q ∈ fixedPoints P (Sylow p G) ↔ P.1 ≤ Q := P.2.sylow_mem_fixedPoints_iff\n        _ ↔ Q.1 = P.1 := ⟨P.3 Q.2, ge_of_eq⟩\n        _ ↔ Q ∈ { P } := Sylow.ext_iff.symm.trans Set.mem_singleton_iff.symm\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])"},{"ref":[12108,12868],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_12726_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this : MulAction.fixedPoints (↥(P : Subgroup G)) (Sylow p G) = {P}) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalStatement":"theorem aug_12726_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this : MulAction.fixedPoints (↥(P : Subgroup G)) (Sylow p G) = {P}) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_12726_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this : MulAction.fixedPoints (↥(P : Subgroup G)) (Sylow p G) = {P}) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])","formalProof":"theorem aug_12726_end (p : ℕ) (G : Type u_1) [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this : MulAction.fixedPoints (↥(P : Subgroup G)) (Sylow p G) = {P}) : Nat.card (Sylow p G) ≡ 1 [MOD p] :=\n  by\n  have : Nat.card (fixedPoints P.1 (Sylow p G)) = 1 := by simp [this]\n  exact (P.2.card_modEq_card_fixedPoints (Sylow p G)).trans (by rw [this])"},{"ref":[13325,13581],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"def aug_13466_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (Q : Sylow p G) : ↥(P : Subgroup G) ≃* ↥(Q : Subgroup G) :=\n  sorry","formalStatement":"def aug_13466_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (Q : Sylow p G) : ↥(P : Subgroup G) ≃* ↥(Q : Subgroup G) :=\n  sorry","formalProofFullname":"def aug_13466_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (Q : Sylow p G) : ↥(P : Subgroup G) ≃* ↥(Q : Subgroup G) :=\n  by\n  rw [← Classical.choose_spec (exists_smul_eq G P Q)]\n  exact P.equivSMul (Classical.choose (exists_smul_eq G P Q))","formalProof":"def aug_13466_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (Q : Sylow p G) : ↥(P : Subgroup G) ≃* ↥(Q : Subgroup G) :=\n  by\n  rw [← Classical.choose_spec (exists_smul_eq G P Q)]\n  exact P.equivSMul (Classical.choose (exists_smul_eq G P Q))"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]","formalProof":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14199_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14199_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14199_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  exact hg2","formalProof":"theorem aug_14199_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14199_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14199_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14199_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  exact hg2","formalProof":"theorem aug_14199_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14199_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14199_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14199_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  exact hg2","formalProof":"theorem aug_14199_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]","formalProof":"theorem aug_14199_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h1 : ↑P ≤ centralizer (zpowers x : Set G) := by rwa [le_centralizer_iff, zpowers_le]\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14295_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14295_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14295_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  exact hg2","formalProof":"theorem aug_14295_14731 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14295_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14295_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14295_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  exact hg2","formalProof":"theorem aug_14295_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14295_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14295_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14295_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  exact hg2","formalProof":"theorem aug_14295_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14295_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14295_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14295_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]","formalProof":"theorem aug_14295_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  have h2 : ↑(g • P) ≤ centralizer (zpowers x : Set G) :=\n    by\n    rw [le_centralizer_iff, zpowers_le]\n    rintro - ⟨z, hz, rfl⟩\n    specialize hy z hz\n    rwa [← mul_assoc, ← eq_mul_inv_iff_mul_eq, mul_assoc, mul_assoc, mul_assoc, ← mul_assoc, eq_inv_mul_iff_mul_eq, ←\n      mul_assoc, ← mul_assoc] at hy\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14619_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14619_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14619_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  exact hg2","formalProof":"theorem aug_14619_14798 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14619_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14619_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14619_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  exact hg2","formalProof":"theorem aug_14619_14889 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (x : G) (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (hg2 : g⁻¹ * x * g = ((_fvar.106793 : G) * g)⁻¹ * x * ((_fvar.106793 : G) * g)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  exact hg2"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14619_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14619_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14619_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]","formalProof":"theorem aug_14619_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G)) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  obtain ⟨h, hh⟩ := exists_smul_eq (centralizer (zpowers x : Set G)) ((g • P).subtype h2) (P.subtype h1)\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14734_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : h • Sylow.subtype (g • P) h2 = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14734_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : h • Sylow.subtype (g • P) h2 = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14734_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : h • Sylow.subtype (g • P) h2 = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]","formalProof":"theorem aug_14734_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : h • Sylow.subtype (g • P) h2 = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  simp_rw [Sylow.smul_subtype, Subgroup.smul_def, smul_smul] at hh\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]"},{"ref":[13900,14992],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_14801_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : Sylow.subtype (((h : G) * g) • P) ⋯ = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalStatement":"theorem aug_14801_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : Sylow.subtype (((h : G) * g) • P) ⋯ = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  sorry","formalProofFullname":"theorem aug_14801_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : Sylow.subtype (((h : G) * g) • P) ⋯ = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]","formalProof":"theorem aug_14801_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) (x : G)\n    (g : G) (hx : x ∈ Subgroup.centralizer (P : Set G)) (hy : g⁻¹ * x * g ∈ Subgroup.centralizer (P : Set G))\n    (h1 : (P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h2 : (g • P : Subgroup G) ≤ Subgroup.centralizer (Subgroup.zpowers x : Set G))\n    (h : ↥(Subgroup.centralizer (Subgroup.zpowers x : Set G)))\n    (hh : Sylow.subtype (((h : G) * g) • P) ⋯ = Sylow.subtype P h1) :\n    ∃ n ∈ Subgroup.normalizer (P : Subgroup G), g⁻¹ * x * g = n⁻¹ * x * n :=\n  by\n  refine ⟨h * g, Sylow.smul_eq_iff_mem_normalizer.mp (Sylow.subtype_injective hh), ?_⟩\n  rw [← mul_assoc, Commute.right_comm (h.prop x (mem_zpowers x)), mul_inv_rev, inv_mul_cancel_right]"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_17004 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_17004 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_17004 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  exact hg2","formalProof":"theorem aug_16954_17004 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  exact hg2","formalProof":"theorem aug_16954_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  exact hg2","formalProof":"theorem aug_16954_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2","formalProof":"theorem aug_16954_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2","formalProof":"theorem aug_16954_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2","formalProof":"theorem aug_16954_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (hg2 : False) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) := by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_16954_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] : ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  intro h\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_16964_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  exact hg2","formalProof":"theorem aug_16964_17093 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_16964_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  exact hg2","formalProof":"theorem aug_16964_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_16964_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2","formalProof":"theorem aug_16964_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  sorry","formalStatement":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_16964_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2","formalProof":"theorem aug_16964_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_16964_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2","formalProof":"theorem aug_16964_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Subgroup.index (P : Subgroup G))\n    (hg2 : False) : False := by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  sorry","formalStatement":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  sorry","formalProofFullname":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_16964_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Subgroup.index (P : Subgroup G)) : False :=\n  by\n  rw [index_eq_card (P : Subgroup G)] at h\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17007_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17007_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17007_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  exact hg2","formalProof":"theorem aug_17007_17179 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17007_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17007_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17007_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2","formalProof":"theorem aug_17007_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  sorry","formalStatement":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  sorry","formalProofFullname":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17007_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17007_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17007_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2","formalProof":"theorem aug_17007_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17007_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17007_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17007_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2","formalProof":"theorem aug_17007_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (hg2 : False) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  sorry","formalStatement":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  sorry","formalProofFullname":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_17007_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h : p ∣ Nat.card (G ⧸ (P : Subgroup G))) : False :=\n  by\n  obtain ⟨x, hx⟩ := exists_prime_orderOf_dvd_card' (G := G ⧸ (P : Subgroup G)) p h\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17096_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17096_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17096_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2","formalProof":"theorem aug_17096_17245 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  sorry","formalStatement":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  sorry","formalProofFullname":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17096_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17096_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17096_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2","formalProof":"theorem aug_17096_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17096_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17096_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17096_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2","formalProof":"theorem aug_17096_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) (hg2 : False) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  sorry","formalStatement":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  sorry","formalProofFullname":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_17096_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)] (h : p ∣ Nat.card (G ⧸ (P : Subgroup G)))\n    (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p) : False :=\n  by\n  have h := IsPGroup.of_card (((Nat.card_zpowers x).trans hx).trans (pow_one p).symm)\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  sorry","formalStatement":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  sorry","formalProofFullname":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17182_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17182_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17182_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2","formalProof":"theorem aug_17182_17429 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17182_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  sorry","formalStatement":"theorem aug_17182_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  sorry","formalProofFullname":"theorem aug_17182_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2","formalProof":"theorem aug_17182_17611 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) (hg2 : False) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hg2"},{"ref":[16782,17641],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  sorry","formalStatement":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  sorry","formalProofFullname":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)","formalProof":"theorem aug_17182_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] (P : Sylow p G)\n    [Subgroup.Normal (P : Subgroup G)] [Subgroup.FiniteIndex (P : Subgroup G)]\n    (h✝ : p ∣ Nat.card (G ⧸ (P : Subgroup G))) (x : G ⧸ (P : Subgroup G)) (hx : orderOf x = p)\n    (h : IsPGroup p ↥(Subgroup.zpowers x)) : False :=\n  by\n  let Q := (zpowers x).comap (QuotientGroup.mk' (P : Subgroup G))\n  have hQ : IsPGroup p Q := by\n    apply h.comap_of_ker_isPGroup\n    rw [QuotientGroup.ker_mk']\n    exact P.2\n  replace hp := mt orderOf_eq_one_iff.mpr (ne_of_eq_of_ne hx hp.1.ne_one)\n  rw [← zpowers_eq_bot, ← Ne, ← bot_lt_iff_ne_bot, ← comap_lt_comap_of_surjective (QuotientGroup.mk'_surjective _),\n    MonoidHom.comap_bot, QuotientGroup.ker_mk'] at hp\n  exact hp.ne' (P.3 hQ hp.le)"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17828_18024 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_17828_18024 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_17828_18024 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  exact hg2","formalProof":"theorem aug_17828_18024 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  exact hg2"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17828_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_17828_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_17828_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  exact hg2","formalProof":"theorem aug_17828_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  exact hg2"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17828_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_17828_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_17828_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hg2","formalProof":"theorem aug_17828_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hg2"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17828_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_17828_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_17828_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)","formalProof":"theorem aug_17828_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.index (P : Subgroup G) :=\n  by\n  rw [← relindex_mul_index le_normalizer, ← card_sylow_eq_index_normalizer]\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17908_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalStatement":"theorem aug_17908_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalProofFullname":"theorem aug_17908_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  exact hg2","formalProof":"theorem aug_17908_18126 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  exact hg2"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17908_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalStatement":"theorem aug_17908_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalProofFullname":"theorem aug_17908_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hg2","formalProof":"theorem aug_17908_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hg2"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_17908_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalStatement":"theorem aug_17908_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalProofFullname":"theorem aug_17908_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)","formalProof":"theorem aug_17908_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : (P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer).Normal := Subgroup.normal_in_normalizer\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18027_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalStatement":"theorem aug_18027_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalProofFullname":"theorem aug_18027_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hg2","formalProof":"theorem aug_18027_18189 {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (hg2 : ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G)) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hg2"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18027_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalStatement":"theorem aug_18027_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalProofFullname":"theorem aug_18027_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)","formalProof":"theorem aug_18027_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  haveI : FiniteIndex ↑(P.subtype le_normalizer : Subgroup (P : Subgroup G).normalizer) := ⟨hP⟩\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)"},{"ref":[17643,18242],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18129_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this✝ : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (this : Subgroup.FiniteIndex (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalStatement":"theorem aug_18129_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this✝ : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (this : Subgroup.FiniteIndex (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  sorry","formalProofFullname":"theorem aug_18129_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this✝ : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (this : Subgroup.FiniteIndex (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)","formalProof":"theorem aug_18129_end {p : ℕ} {G : Type u_1} [Group G] [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hP : Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) ≠ 0)\n    (this✝ : Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G))))\n    (this : Subgroup.FiniteIndex (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (P : Subgroup G)))) :\n    ¬p ∣ Subgroup.relindex (P : Subgroup G) (Subgroup.normalizer (P : Subgroup G)) * Nat.card (Sylow p G) :=\n  by\n  replace hP := not_dvd_index_sylow' (P.subtype le_normalizer)\n  exact hp.1.not_dvd_mul hP (not_dvd_card_sylow p G)"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_18703 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 : _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_18703 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 : _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_18703 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 : _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  exact hg2","formalProof":"theorem aug_18585_18703 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 : _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * _fvar.122133) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * _fvar.122133) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * _fvar.122133) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  exact hg2","formalProof":"theorem aug_18585_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * _fvar.122133) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  exact hg2","formalProof":"theorem aug_18585_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2","formalProof":"theorem aug_18585_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2","formalProof":"theorem aug_18585_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (_fvar.127958 : G) * _fvar.122133 ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2","formalProof":"theorem aug_18585_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n              (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N)\n                (MulAut.conjNormal ((_fvar.127958 : G) * _fvar.122133))))\n            (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n              (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N)\n                (MulAut.conjNormal ((_fvar.127958 : G) * _fvar.122133))))\n            (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n              (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N)\n                (MulAut.conjNormal ((_fvar.127958 : G) * _fvar.122133))))\n            (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_18585_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * _fvar.122133)))\n              (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * _fvar.122133 * _fvar.135604 * ((_fvar.127958 : G) * _fvar.122133)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N)\n                (MulAut.conjNormal ((_fvar.127958 : G) * _fvar.122133))))\n            (P : Subgroup ↥N)) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18585_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalStatement":"theorem aug_18585_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  sorry","formalProofFullname":"theorem aug_18585_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_18585_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) :\n    Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N = ⊤ :=\n  by\n  refine top_le_iff.mp fun g _ => ?_\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * g) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * g) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * g) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  exact hg2","formalProof":"theorem aug_18622_18753 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (_fvar.127958 : G)⁻¹ * ((_fvar.127958 : G) * g) ∈\n        N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  exact hg2","formalProof":"theorem aug_18622_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2","formalProof":"theorem aug_18622_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2","formalProof":"theorem aug_18622_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 : (_fvar.127958 : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2","formalProof":"theorem aug_18622_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((_fvar.127958 : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((_fvar.127958 : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((_fvar.127958 : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_18622_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) _fvar.135604 ∈\n          Subgroup.map\n            (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((_fvar.127958 : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (_fvar.127958 : G) * g * _fvar.135604 * ((_fvar.127958 : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((_fvar.127958 : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18622_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18622_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18622_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_18622_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  obtain ⟨n, hn⟩ := exists_smul_eq N ((MulAut.conjNormal g : MulAut N) • P) P\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18706_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18706_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18706_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  exact hg2","formalProof":"theorem aug_18706_18789 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18706_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18706_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18706_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2","formalProof":"theorem aug_18706_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18706_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18706_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18706_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2","formalProof":"theorem aug_18706_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18706_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18706_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18706_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2","formalProof":"theorem aug_18706_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18706_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18706_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18706_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_18706_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18706_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalStatement":"theorem aug_18706_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  sorry","formalProofFullname":"theorem aug_18706_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_18706_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ⊔ N :=\n  by\n  rw [← inv_mul_cancel_left (↑n) g, sup_comm]\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18756_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18756_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18756_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2","formalProof":"theorem aug_18756_18963 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18756_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18756_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18756_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2","formalProof":"theorem aug_18756_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18756_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18756_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18756_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2","formalProof":"theorem aug_18756_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18756_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18756_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18756_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_18756_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18756_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18756_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18756_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_18756_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G)⁻¹ * ((n : G) * g) ∈ N ⊔ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  apply mul_mem_sup (N.inv_mem n.2)\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18792_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18792_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18792_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2","formalProof":"theorem aug_18792_19060 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 : (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N))) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18792_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18792_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18792_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2","formalProof":"theorem aug_18792_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18792_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18792_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18792_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_18792_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P)\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18792_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18792_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18792_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_18792_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N) (hn : n • MulAut.conjNormal g • P = P) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  rw [Sylow.smul_def, ← mul_smul, ← MulAut.conjNormal_val, ← MulAut.conjNormal.map_mul, Sylow.ext_iff,\n    Sylow.pointwise_smul_def, Subgroup.pointwise_smul_def] at hn\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18966_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18966_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18966_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2","formalProof":"theorem aug_18966_19116 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n            (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18966_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18966_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18966_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_18966_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_18966_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_18966_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_18966_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_18966_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  have : Function.Injective (MulAut.conj (n * g)).toMonoidHom := (MulAut.conj (n * g)).injective\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_19063_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_19063_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_19063_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2","formalProof":"theorem aug_19063_19174 {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G))\n    (hg2 :\n      (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) _fvar.135604 ∈\n          Subgroup.map (MonoidHom.comp (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) (Subgroup.subtype N))\n            (P : Subgroup ↥N) ↔\n        (n : G) * g * _fvar.135604 * ((n : G) * g)⁻¹ ∈\n          Subgroup.map\n            (MonoidHom.comp (Subgroup.subtype N)\n              ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g))))\n            (P : Subgroup ↥N)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  exact hg2"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_19063_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalStatement":"theorem aug_19063_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  sorry","formalProofFullname":"theorem aug_19063_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_19063_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) :\n    (n : G) * g ∈ Subgroup.normalizer (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) :=\n  by\n  refine fun x ↦ (mem_map_iff_mem this).symm.trans ?_\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[18244,19180],"openedNamespaces":"[Pointwise, Subgroup, MulAction]","formalStatementFullname":"theorem aug_19119_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) (x : G) :\n    (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) x ∈\n        Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n          (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n      (n : G) * g * x * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N) :=\n  sorry","formalStatement":"theorem aug_19119_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) (x : G) :\n    (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) x ∈\n        Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n          (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n      (n : G) * g * x * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N) :=\n  sorry","formalProofFullname":"theorem aug_19119_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) (x : G) :\n    (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) x ∈\n        Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n          (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n      (n : G) * g * x * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N) :=\n  by\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl","formalProof":"theorem aug_19119_end {G : Type u_1} [Group G] {p : ℕ} [Fact (Nat.Prime p)] {N : Subgroup G} [Subgroup.Normal N]\n    [Finite (Sylow p ↥N)] (P : Sylow p ↥N) (g : G) (x✝ : g ∈ ⊤) (n : ↥N)\n    (hn :\n      Subgroup.map ((MulDistribMulAction.toMonoidEnd (MulAut ↥N) ↥N) (MulAut.conjNormal ((n : G) * g)))\n          (P : Subgroup ↥N) =\n        (P : Subgroup ↥N))\n    (this : Function.Injective (⇑(MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) : G → G)) (x : G) :\n    (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g))) x ∈\n        Subgroup.map (MulEquiv.toMonoidHom (MulAut.conj ((n : G) * g)))\n          (Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N)) ↔\n      (n : G) * g * x * ((n : G) * g)⁻¹ ∈ Subgroup.map (Subgroup.subtype N) (P : Subgroup ↥N) :=\n  by\n  rw [map_map, ← congr_arg (map N.subtype) hn, map_map]\n  rfl"},{"ref":[21719,22273],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_22141_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) :\n    Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.comap (Subgroup.subtype (Subgroup.normalizer H)) H) ≡\n      Nat.card (G ⧸ H) [MOD p] :=\n  sorry","formalStatement":"theorem aug_22141_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) :\n    Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.comap (Subgroup.subtype (Subgroup.normalizer H)) H) ≡\n      Nat.card (G ⧸ H) [MOD p] :=\n  sorry","formalProofFullname":"theorem aug_22141_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) :\n    Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.comap (Subgroup.subtype (Subgroup.normalizer H)) H) ≡\n      Nat.card (G ⧸ H) [MOD p] :=\n  by\n  rw [← Nat.card_congr (fixedPointsMulLeftCosetsEquivQuotient H)]\n  exact ((IsPGroup.of_card hH).card_modEq_card_fixedPoints _).symm","formalProof":"theorem aug_22141_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) :\n    Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.comap (Subgroup.subtype (Subgroup.normalizer H)) H) ≡\n      Nat.card (G ⧸ H) [MOD p] :=\n  by\n  rw [← Nat.card_congr (fixedPointsMulLeftCosetsEquivQuotient H)]\n  exact ((IsPGroup.of_card hH).card_modEq_card_fixedPoints _).symm"},{"ref":[22275,22962],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_22640_22891 {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n)\n    (hg2 :\n      Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.subgroupOf H (Subgroup.normalizer H)) * p ^ n ≡\n        Nat.card (G ⧸ H) * p ^ n [MOD p * p ^ n]) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  sorry","formalStatement":"theorem aug_22640_22891 {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n)\n    (hg2 :\n      Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.subgroupOf H (Subgroup.normalizer H)) * p ^ n ≡\n        Nat.card (G ⧸ H) * p ^ n [MOD p * p ^ n]) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  sorry","formalProofFullname":"theorem aug_22640_22891 {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n)\n    (hg2 :\n      Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.subgroupOf H (Subgroup.normalizer H)) * p ^ n ≡\n        Nat.card (G ⧸ H) * p ^ n [MOD p * p ^ n]) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  by\n  have : H.subgroupOf (normalizer H) ≃ H := (subgroupOfEquivOfLe le_normalizer).toEquiv\n  rw [card_eq_card_quotient_mul_card_subgroup H, card_eq_card_quotient_mul_card_subgroup (H.subgroupOf (normalizer H)),\n    Nat.card_congr this, hH, pow_succ']\n  exact hg2","formalProof":"theorem aug_22640_22891 {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n)\n    (hg2 :\n      Nat.card (↥(Subgroup.normalizer H) ⧸ Subgroup.subgroupOf H (Subgroup.normalizer H)) * p ^ n ≡\n        Nat.card (G ⧸ H) * p ^ n [MOD p * p ^ n]) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  by\n  have : H.subgroupOf (normalizer H) ≃ H := (subgroupOfEquivOfLe le_normalizer).toEquiv\n  rw [card_eq_card_quotient_mul_card_subgroup H, card_eq_card_quotient_mul_card_subgroup (H.subgroupOf (normalizer H)),\n    Nat.card_congr this, hH, pow_succ']\n  exact hg2"},{"ref":[22275,22962],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_22640_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) : Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  sorry","formalStatement":"theorem aug_22640_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) : Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  sorry","formalProofFullname":"theorem aug_22640_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) : Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  by\n  have : H.subgroupOf (normalizer H) ≃ H := (subgroupOfEquivOfLe le_normalizer).toEquiv\n  rw [card_eq_card_quotient_mul_card_subgroup H, card_eq_card_quotient_mul_card_subgroup (H.subgroupOf (normalizer H)),\n    Nat.card_congr this, hH, pow_succ']\n  exact (card_quotient_normalizer_modEq_card_quotient hH).mul_right' _","formalProof":"theorem aug_22640_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) : Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  by\n  have : H.subgroupOf (normalizer H) ≃ H := (subgroupOfEquivOfLe le_normalizer).toEquiv\n  rw [card_eq_card_quotient_mul_card_subgroup H, card_eq_card_quotient_mul_card_subgroup (H.subgroupOf (normalizer H)),\n    Nat.card_congr this, hH, pow_succ']\n  exact (card_quotient_normalizer_modEq_card_quotient hH).mul_right' _"},{"ref":[22275,22962],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_22730_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) (this : ↥(Subgroup.subgroupOf H (Subgroup.normalizer H)) ≃ ↥H) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  sorry","formalStatement":"theorem aug_22730_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) (this : ↥(Subgroup.subgroupOf H (Subgroup.normalizer H)) ≃ ↥H) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  sorry","formalProofFullname":"theorem aug_22730_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) (this : ↥(Subgroup.subgroupOf H (Subgroup.normalizer H)) ≃ ↥H) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  by\n  rw [card_eq_card_quotient_mul_card_subgroup H, card_eq_card_quotient_mul_card_subgroup (H.subgroupOf (normalizer H)),\n    Nat.card_congr this, hH, pow_succ']\n  exact (card_quotient_normalizer_modEq_card_quotient hH).mul_right' _","formalProof":"theorem aug_22730_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] {H : Subgroup G}\n    (hH : Nat.card ↥H = p ^ n) (this : ↥(Subgroup.subgroupOf H (Subgroup.normalizer H)) ≃ ↥H) :\n    Nat.card ↥(Subgroup.normalizer H) ≡ Nat.card G [MOD p ^ (n + 1)] :=\n  by\n  rw [card_eq_card_quotient_mul_card_subgroup H, card_eq_card_quotient_mul_card_subgroup (H.subgroupOf (normalizer H)),\n    Nat.card_congr this, hH, pow_succ']\n  exact (card_quotient_normalizer_modEq_card_quotient hH).mul_right' _"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28708_28830 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : Nat.card G ≠ 0) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28708_28830 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : Nat.card G ≠ 0) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28708_28830 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : Nat.card G ≠ 0) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  exact hg2","formalProof":"theorem aug_28708_28830 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : Nat.card G ≠ 0) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28708_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28708_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28708_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  exact hg2","formalProof":"theorem aug_28708_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28708_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28708_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28708_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  exact hg2","formalProof":"theorem aug_28708_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28708_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28708_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28708_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2","formalProof":"theorem aug_28708_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28708_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28708_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28708_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn","formalProof":"theorem aug_28708_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Fact p.Prime := ⟨hp⟩\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28742_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28742_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28742_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  exact hg2","formalProof":"theorem aug_28742_28871 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : ∃ H, Nat.card ↥H = p ^ n) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28742_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28742_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28742_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  exact hg2","formalProof":"theorem aug_28742_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ Nat.card G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28742_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28742_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28742_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2","formalProof":"theorem aug_28742_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) (hg2 : p ^ n ∣ p ^ _fvar.208218) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28742_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28742_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28742_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn","formalProof":"theorem aug_28742_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this : Fact (Nat.Prime p)) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  have : Finite G := Nat.finite_of_card_ne_zero <| by linarith [Nat.one_le_pow n p hp.pos]\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28833_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ Nat.card G) :\n    ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28833_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ Nat.card G) :\n    ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28833_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ Nat.card G) :\n    ∃ H, Nat.card ↥H = p ^ n := by\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  exact hg2","formalProof":"theorem aug_28833_28916 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ Nat.card G) :\n    ∃ H, Nat.card ↥H = p ^ n := by\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28833_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ p ^ _fvar.208218) :\n    ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28833_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ p ^ _fvar.208218) :\n    ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28833_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ p ^ _fvar.208218) :\n    ∃ H, Nat.card ↥H = p ^ n := by\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2","formalProof":"theorem aug_28833_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (hg2 : p ^ n ∣ p ^ _fvar.208218) :\n    ∃ H, Nat.card ↥H = p ^ n := by\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28833_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28833_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28833_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn","formalProof":"theorem aug_28833_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  obtain ⟨m, hm⟩ := h.exists_card_eq\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28874_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m)\n    (hg2 : p ^ n ∣ p ^ m) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28874_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m)\n    (hg2 : p ^ n ∣ p ^ m) : ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28874_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m)\n    (hg2 : p ^ n ∣ p ^ m) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2","formalProof":"theorem aug_28874_28936 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m)\n    (hg2 : p ^ n ∣ p ^ m) : ∃ H, Nat.card ↥H = p ^ n :=\n  by\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact hg2"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28874_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalStatement":"theorem aug_28874_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    ∃ H, Nat.card ↥H = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_28874_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    ∃ H, Nat.card ↥H = p ^ n := by\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn","formalProof":"theorem aug_28874_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    ∃ H, Nat.card ↥H = p ^ n := by\n  refine exists_subgroup_card_pow_prime _ ?_\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn"},{"ref":[28385,28999],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_28919_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    p ^ n ∣ Nat.card G :=\n  sorry","formalStatement":"theorem aug_28919_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    p ^ n ∣ Nat.card G :=\n  sorry","formalProofFullname":"theorem aug_28919_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    p ^ n ∣ Nat.card G := by\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn","formalProof":"theorem aug_28919_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G)\n    (hn : p ^ n ≤ Nat.card G) (this✝ : Fact (Nat.Prime p)) (this : Finite G) (m : ℕ) (hm : Nat.card G = p ^ m) :\n    p ^ n ∣ Nat.card G := by\n  rw [hm] at hn ⊢\n  exact pow_dvd_pow _ <| (pow_le_pow_iff_right hp.one_lt).1 hn"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29365_29511 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = p ^ n) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29365_29511 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = p ^ n) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29365_29511 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = p ^ n) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  exact hg2","formalProof":"theorem aug_29365_29511 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = p ^ n) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  exact hg2"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29365_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29365_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29365_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  exact hg2","formalProof":"theorem aug_29365_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  exact hg2"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29365_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29365_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29365_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact hg2","formalProof":"theorem aug_29365_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) _fvar.209054) = Nat.card ↥_fvar.209054) :\n    ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact hg2"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29365_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29365_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29365_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv","formalProof":"theorem aug_29365_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  obtain ⟨H', H'card⟩ := exists_subgroup_card_pow_prime_of_le_card hp (h.to_subgroup H) hn\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29460_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29460_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29460_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  exact hg2","formalProof":"theorem aug_29460_29529 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  exact hg2"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29460_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29460_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29460_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact hg2","formalProof":"theorem aug_29460_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact hg2"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29460_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalStatement":"theorem aug_29460_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29460_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv","formalProof":"theorem aug_29460_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) : ∃ H' ≤ H, Nat.card ↥H' = p ^ n :=\n  by\n  refine ⟨H'.map H.subtype, map_subtype_le _, ?_⟩\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29514_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  sorry","formalStatement":"theorem aug_29514_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29514_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  by\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact hg2","formalProof":"theorem aug_29514_29631 {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n)\n    (hg2 : Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H') :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  by\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact hg2"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29514_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  sorry","formalStatement":"theorem aug_29514_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  sorry","formalProofFullname":"theorem aug_29514_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  by\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv","formalProof":"theorem aug_29514_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = p ^ n :=\n  by\n  rw [← H'card]\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv"},{"ref":[29001,29669],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_29532_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_29532_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_29532_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H' :=\n  by\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv","formalProof":"theorem aug_29532_end {G : Type u} [Group G] {n : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hn : p ^ n ≤ Nat.card ↥H) (H' : Subgroup ↥H) (H'card : Nat.card ↥H' = p ^ n) :\n    Nat.card ↥(Subgroup.map (Subgroup.subtype H) H') = Nat.card ↥H' :=\n  by\n  let e : H' ≃* H'.map H.subtype := H'.equivMapOfInjective (Subgroup.subtype H) H.subtype_injective\n  exact Nat.card_congr e.symm.toEquiv"},{"ref":[29671,30383],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30065_30299 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H') :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_30065_30299 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H') :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_30065_30299 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H') :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨m, hmk, hkm⟩ : ∃ s, p ^ s ≤ k ∧ k < p ^ (s + 1) :=\n    exists_nat_pow_near (Nat.one_le_iff_ne_zero.2 hk₀) hp.one_lt\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  exact hg2","formalProof":"theorem aug_30065_30299 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H') :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨m, hmk, hkm⟩ : ∃ s, p ^ s ≤ k ∧ k < p ^ (s + 1) :=\n    exists_nat_pow_near (Nat.one_le_iff_ne_zero.2 hk₀) hp.one_lt\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  exact hg2"},{"ref":[29671,30383],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30065_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_30065_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_30065_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨m, hmk, hkm⟩ : ∃ s, p ^ s ≤ k ∧ k < p ^ (s + 1) :=\n    exists_nat_pow_near (Nat.one_le_iff_ne_zero.2 hk₀) hp.one_lt\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  exact hg2","formalProof":"theorem aug_30065_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨m, hmk, hkm⟩ : ∃ s, p ^ s ≤ k ∧ k < p ^ (s + 1) :=\n    exists_nat_pow_near (Nat.one_le_iff_ne_zero.2 hk₀) hp.one_lt\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  exact hg2"},{"ref":[29671,30383],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30065_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_30065_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_30065_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨m, hmk, hkm⟩ : ∃ s, p ^ s ≤ k ∧ k < p ^ (s + 1) :=\n    exists_nat_pow_near (Nat.one_le_iff_ne_zero.2 hk₀) hp.one_lt\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  simpa only [pow_succ', H'card] using And.intro hmk hkm","formalProof":"theorem aug_30065_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨m, hmk, hkm⟩ : ∃ s, p ^ s ≤ k ∧ k < p ^ (s + 1) :=\n    exists_nat_pow_near (Nat.one_le_iff_ne_zero.2 hk₀) hp.one_lt\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  simpa only [pow_succ', H'card] using And.intro hmk hkm"},{"ref":[29671,30383],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30203_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1))\n    (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_30203_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1))\n    (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_30203_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1))\n    (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  exact hg2","formalProof":"theorem aug_30203_30326 {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1))\n    (hg2 : Nat.card ↥_fvar.211179 ≤ k ∧ k < p * Nat.card ↥_fvar.211179) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  exact hg2"},{"ref":[29671,30383],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30203_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_30203_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_30203_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  simpa only [pow_succ', H'card] using And.intro hmk hkm","formalProof":"theorem aug_30203_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) :\n    ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  obtain ⟨H', H'H, H'card⟩ := exists_subgroup_le_card_pow_prime_of_le_card hp h (hmk.trans hk)\n  refine ⟨H', H'H, ?_⟩\n  simpa only [pow_succ', H'card] using And.intro hmk hkm"},{"ref":[29671,30383],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30302_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) (H' : Subgroup G)\n    (H'H : H' ≤ H) (H'card : Nat.card ↥H' = p ^ m) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalStatement":"theorem aug_30302_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) (H' : Subgroup G)\n    (H'H : H' ≤ H) (H'card : Nat.card ↥H' = p ^ m) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  sorry","formalProofFullname":"theorem aug_30302_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) (H' : Subgroup G)\n    (H'H : H' ≤ H) (H'card : Nat.card ↥H' = p ^ m) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  refine ⟨H', H'H, ?_⟩\n  simpa only [pow_succ', H'card] using And.intro hmk hkm","formalProof":"theorem aug_30302_end {G : Type u} [Group G] {k : ℕ} {p : ℕ} (hp : Nat.Prime p) (h : IsPGroup p G) {H : Subgroup G}\n    (hk : k ≤ Nat.card ↥H) (hk₀ : k ≠ 0) (m : ℕ) (hmk : p ^ m ≤ k) (hkm : k < p ^ (m + 1)) (H' : Subgroup G)\n    (H'H : H' ≤ H) (H'card : Nat.card ↥H' = p ^ m) : ∃ H' ≤ H, Nat.card ↥H' ≤ k ∧ k < p * Nat.card ↥H' :=\n  by\n  refine ⟨H', H'H, ?_⟩\n  simpa only [pow_succ', H'card] using And.intro hmk hkm"},{"ref":[30385,30701],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30546_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ n ∣ Nat.card G) : p ^ n ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_30546_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ n ∣ Nat.card G) : p ^ n ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_30546_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ n ∣ Nat.card G) : p ^ n ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  rw [← index_mul_card P.1] at hdvd\n  exact (hp.1.coprime_pow_of_not_dvd (not_dvd_index_sylow P index_ne_zero_of_finite)).symm.dvd_of_dvd_mul_left hdvd","formalProof":"theorem aug_30546_end {G : Type u} [Group G] [Finite G] {p : ℕ} {n : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ n ∣ Nat.card G) : p ^ n ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  rw [← index_mul_card P.1] at hdvd\n  exact (hp.1.coprime_pow_of_not_dvd (not_dvd_index_sylow P index_ne_zero_of_finite)).symm.dvd_of_dvd_mul_left hdvd"},{"ref":[30703,30940],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30841_30917 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ Nat.card ↥(P : Subgroup G)) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_30841_30917 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ Nat.card ↥(P : Subgroup G)) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_30841_30917 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ Nat.card ↥(P : Subgroup G)) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  rw [← pow_one p] at hdvd\n  have key := P.pow_dvd_card_of_pow_dvd_card hdvd\n  exact hg2","formalProof":"theorem aug_30841_30917 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ Nat.card ↥(P : Subgroup G)) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  rw [← pow_one p] at hdvd\n  have key := P.pow_dvd_card_of_pow_dvd_card hdvd\n  exact hg2"},{"ref":[30703,30940],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30841_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_30841_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_30841_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  rw [← pow_one p] at hdvd\n  have key := P.pow_dvd_card_of_pow_dvd_card hdvd\n  rwa [pow_one] at key","formalProof":"theorem aug_30841_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  rw [← pow_one p] at hdvd\n  have key := P.pow_dvd_card_of_pow_dvd_card hdvd\n  rwa [pow_one] at key"},{"ref":[30703,30940],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_30870_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ 1 ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_30870_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ 1 ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_30870_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ 1 ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  have key := P.pow_dvd_card_of_pow_dvd_card hdvd\n  rwa [pow_one] at key","formalProof":"theorem aug_30870_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ^ 1 ∣ Nat.card G) : p ∣ Nat.card ↥(P : Subgroup G) :=\n  by\n  have key := P.pow_dvd_card_of_pow_dvd_card hdvd\n  rwa [pow_one] at key"},{"ref":[31269,31558],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31418_31531 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ 1) : (P : Subgroup G) ≠ ⊥ :=\n  sorry","formalStatement":"theorem aug_31418_31531 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ 1) : (P : Subgroup G) ≠ ⊥ :=\n  sorry","formalProofFullname":"theorem aug_31418_31531 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ 1) : (P : Subgroup G) ≠ ⊥ :=\n  by\n  refine fun h => hp.out.not_dvd_one ?_\n  have key : p ∣ Nat.card (P : Subgroup G) := P.dvd_card_of_dvd_card hdvd\n  exact hg2","formalProof":"theorem aug_31418_31531 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (hg2 : p ∣ 1) : (P : Subgroup G) ≠ ⊥ :=\n  by\n  refine fun h => hp.out.not_dvd_one ?_\n  have key : p ∣ Nat.card (P : Subgroup G) := P.dvd_card_of_dvd_card hdvd\n  exact hg2"},{"ref":[31269,31558],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31418_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : (P : Subgroup G) ≠ ⊥ :=\n  sorry","formalStatement":"theorem aug_31418_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : (P : Subgroup G) ≠ ⊥ :=\n  sorry","formalProofFullname":"theorem aug_31418_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : (P : Subgroup G) ≠ ⊥ :=\n  by\n  refine fun h => hp.out.not_dvd_one ?_\n  have key : p ∣ Nat.card (P : Subgroup G) := P.dvd_card_of_dvd_card hdvd\n  rwa [h, card_bot] at key","formalProof":"theorem aug_31418_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) : (P : Subgroup G) ≠ ⊥ :=\n  by\n  refine fun h => hp.out.not_dvd_one ?_\n  have key : p ∣ Nat.card (P : Subgroup G) := P.dvd_card_of_dvd_card hdvd\n  rwa [h, card_bot] at key"},{"ref":[31269,31558],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31458_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (h : (P : Subgroup G) = ⊥) : p ∣ 1 :=\n  sorry","formalStatement":"theorem aug_31458_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (h : (P : Subgroup G) = ⊥) : p ∣ 1 :=\n  sorry","formalProofFullname":"theorem aug_31458_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (h : (P : Subgroup G) = ⊥) : p ∣ 1 :=\n  by\n  have key : p ∣ Nat.card (P : Subgroup G) := P.dvd_card_of_dvd_card hdvd\n  rwa [h, card_bot] at key","formalProof":"theorem aug_31458_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hdvd : p ∣ Nat.card G) (h : (P : Subgroup G) = ⊥) : p ∣ 1 :=\n  by\n  have key : p ∣ Nat.card (P : Subgroup G) := P.dvd_card_of_dvd_card hdvd\n  rwa [h, card_bot] at key"},{"ref":[31560,32117],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31822_31979 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalStatement":"theorem aug_31822_31979 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalProofFullname":"theorem aug_31822_31979 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  obtain ⟨n, heq : Nat.card P = _⟩ := IsPGroup.iff_card.mp P.isPGroup'\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  exact hg2","formalProof":"theorem aug_31822_31979 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  obtain ⟨n, heq : Nat.card P = _⟩ := IsPGroup.iff_card.mp P.isPGroup'\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  exact hg2"},{"ref":[31560,32117],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31822_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalStatement":"theorem aug_31822_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalProofFullname":"theorem aug_31822_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  obtain ⟨n, heq : Nat.card P = _⟩ := IsPGroup.iff_card.mp P.isPGroup'\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact hg2","formalProof":"theorem aug_31822_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G)\n    (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  obtain ⟨n, heq : Nat.card P = _⟩ := IsPGroup.iff_card.mp P.isPGroup'\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact hg2"},{"ref":[31560,32117],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31822_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalStatement":"theorem aug_31822_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalProofFullname":"theorem aug_31822_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  obtain ⟨n, heq : Nat.card P = _⟩ := IsPGroup.iff_card.mp P.isPGroup'\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact P.1.card_subgroup_dvd_card","formalProof":"theorem aug_31822_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  obtain ⟨n, heq : Nat.card P = _⟩ := IsPGroup.iff_card.mp P.isPGroup'\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact P.1.card_subgroup_dvd_card"},{"ref":[31560,32117],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31897_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalStatement":"theorem aug_31897_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalProofFullname":"theorem aug_31897_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact hg2","formalProof":"theorem aug_31897_32082 {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) (hg2 : Nat.card ↥(P : Subgroup G) ∣ Nat.card G) :\n    Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact hg2"},{"ref":[31560,32117],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31897_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalStatement":"theorem aug_31897_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalProofFullname":"theorem aug_31897_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact P.1.card_subgroup_dvd_card","formalProof":"theorem aug_31897_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) = p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  refine Nat.dvd_antisymm ?_ (P.pow_dvd_card_of_pow_dvd_card (Nat.ord_proj_dvd _ p))\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact P.1.card_subgroup_dvd_card"},{"ref":[31560,32117],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_31982_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalStatement":"theorem aug_31982_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p :=\n  sorry","formalProofFullname":"theorem aug_31982_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact P.1.card_subgroup_dvd_card","formalProof":"theorem aug_31982_end {G : Type u} [Group G] [Finite G] {p : ℕ} [Fact (Nat.Prime p)] (P : Sylow p G) (n : ℕ)\n    (heq : Nat.card ↥(P : Subgroup G) = p ^ n) : Nat.card ↥(P : Subgroup G) ∣ p ^ (Nat.factorization (Nat.card G)) p :=\n  by\n  rw [heq, ← hp.out.pow_dvd_iff_dvd_ord_proj (show Nat.card G ≠ 0 from Nat.card_pos.ne'), ← heq]\n  exact P.1.card_subgroup_dvd_card"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_33130_33206 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  sorry","formalStatement":"def aug_33130_33206 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  sorry","formalProofFullname":"def aug_33130_33206 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  exact hg2","formalProof":"def aug_33130_33206 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  exact hg2"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_33130_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  sorry","formalStatement":"def aug_33130_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  sorry","formalProofFullname":"def aug_33130_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  exact hg2","formalProof":"def aug_33130_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  exact hg2"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_33130_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  sorry","formalStatement":"def aug_33130_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  sorry","formalProofFullname":"def aug_33130_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  exact hg2","formalProof":"def aug_33130_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.218113 = Inhabited.default) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  exact hg2"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_33130_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Unique (Sylow p G) :=\n  sorry","formalStatement":"def aug_33130_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Unique (Sylow p G) :=\n  sorry","formalProofFullname":"def aug_33130_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]","formalProof":"def aug_33130_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Unique (Sylow p G) :=\n  by\n  refine { uniq := fun Q ↦ ?_ }\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33164_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  sorry","formalStatement":"theorem aug_33164_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  sorry","formalProofFullname":"theorem aug_33164_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  exact hg2","formalProof":"theorem aug_33164_33257 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  exact hg2"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33164_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  sorry","formalStatement":"theorem aug_33164_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  sorry","formalProofFullname":"theorem aug_33164_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  exact hg2","formalProof":"theorem aug_33164_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (hg2 : Q = Inhabited.default) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  exact hg2"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33164_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) : Q = Inhabited.default :=\n  sorry","formalStatement":"theorem aug_33164_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) : Q = Inhabited.default :=\n  sorry","formalProofFullname":"theorem aug_33164_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]","formalProof":"theorem aug_33164_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h1⟩ := exists_smul_eq G P Q\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33209_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) (hg2 : Q = Inhabited.default) :\n    Q = Inhabited.default :=\n  sorry","formalStatement":"theorem aug_33209_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) (hg2 : Q = Inhabited.default) :\n    Q = Inhabited.default :=\n  sorry","formalProofFullname":"theorem aug_33209_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) (hg2 : Q = Inhabited.default) :\n    Q = Inhabited.default := by\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  exact hg2","formalProof":"theorem aug_33209_33297 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) (hg2 : Q = Inhabited.default) :\n    Q = Inhabited.default := by\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  exact hg2"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33209_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) : Q = Inhabited.default :=\n  sorry","formalStatement":"theorem aug_33209_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) : Q = Inhabited.default :=\n  sorry","formalProofFullname":"theorem aug_33209_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]","formalProof":"theorem aug_33209_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x : G) (h1 : x • P = Q) : Q = Inhabited.default :=\n  by\n  obtain ⟨x, h2⟩ := exists_smul_eq G P default\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]"},{"ref":[32883,33319],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33260_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x✝ : G) (h1 : x • P = Q) (x : G)\n    (h2 : x • P = Inhabited.default) : Q = Inhabited.default :=\n  sorry","formalStatement":"theorem aug_33260_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x✝ : G) (h1 : x • P = Q) (x : G)\n    (h2 : x • P = Inhabited.default) : Q = Inhabited.default :=\n  sorry","formalProofFullname":"theorem aug_33260_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x✝ : G) (h1 : x • P = Q) (x : G)\n    (h2 : x • P = Inhabited.default) : Q = Inhabited.default :=\n  by\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]","formalProof":"theorem aug_33260_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (Q : Sylow p G) (x✝ : G) (h1 : x • P = Q) (x : G)\n    (h2 : x • P = Inhabited.default) : Q = Inhabited.default :=\n  by\n  rw [Sylow.smul_eq_of_normal] at h1 h2\n  rw [← h1, ← h2]"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33527_33595 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33527_33595 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33527_33595 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  exact hg2","formalProof":"theorem aug_33527_33595 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33527_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33527_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33527_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  exact hg2","formalProof":"theorem aug_33527_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33527_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33527_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33527_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  exact hg2","formalProof":"theorem aug_33527_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33527_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.221170 • P = P) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33527_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.221170 • P = P) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33527_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.221170 • P = P) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2","formalProof":"theorem aug_33527_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (hg2 : _fvar.221170 • P = P) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33527_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33527_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33527_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]","formalProof":"theorem aug_33527_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  haveI := Sylow.unique_of_normal P h\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33565_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33565_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33565_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  exact hg2","formalProof":"theorem aug_33565_33606 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : Subgroup.map (MulEquiv.toMonoidHom _fvar.221170) (P : Subgroup G) = (P : Subgroup G)) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33565_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33565_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33565_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  exact hg2","formalProof":"theorem aug_33565_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33565_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33565_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33565_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2","formalProof":"theorem aug_33565_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33565_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33565_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33565_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]","formalProof":"theorem aug_33565_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) : Subgroup.Characteristic (P : Subgroup G) :=\n  by\n  rw [characteristic_iff_map_eq]\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33598_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33598_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33598_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  exact hg2","formalProof":"theorem aug_33598_33650 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G))\n    (hg2 : (_fvar.221170 • P : Subgroup G) = (P : Subgroup G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33598_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33598_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33598_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2","formalProof":"theorem aug_33598_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (hg2 : _fvar.221170 • P = P) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33598_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33598_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33598_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]","formalProof":"theorem aug_33598_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) :\n    ∀ (ϕ : G ≃* G), Subgroup.map (MulEquiv.toMonoidHom ϕ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  intro Φ\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33609_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) (hg2 : Φ • P = P) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33609_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) (hg2 : Φ • P = P) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33609_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) (hg2 : Φ • P = P) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2","formalProof":"theorem aug_33609_33658 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) (hg2 : Φ • P = P) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  exact hg2"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33609_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33609_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33609_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]","formalProof":"theorem aug_33609_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    Subgroup.map (MulEquiv.toMonoidHom Φ) (P : Subgroup G) = (P : Subgroup G) :=\n  by\n  show (Φ • P).toSubgroup = P.toSubgroup\n  congr\n  simp [eq_iff_true_of_subsingleton]"},{"ref":[33356,33695],"openedNamespaces":"[Pointwise, QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_33653_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    (Φ • P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_33653_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    (Φ • P : Subgroup G) = (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_33653_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    (Φ • P : Subgroup G) = (P : Subgroup G) := by\n  congr\n  simp [eq_iff_true_of_subsingleton]","formalProof":"theorem aug_33653_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (h : Subgroup.Normal (P : Subgroup G)) (this : Unique (Sylow p G)) (Φ : G ≃* G) :\n    (Φ • P : Subgroup G) = (P : Subgroup G) := by\n  congr\n  simp [eq_iff_true_of_subsingleton]"},{"ref":[33978,34600],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_34167_34413 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 : Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_34167_34413 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 : Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_34167_34413 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 : Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  have := normal_of_normalizer_normal (P.subtype (le_normalizer.trans le_normalizer))\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  exact hg2","formalProof":"theorem aug_34167_34413 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 : Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  have := normal_of_normalizer_normal (P.subtype (le_normalizer.trans le_normalizer))\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  exact hg2"},{"ref":[33978,34600],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_34167_34523 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 :\n      Subgroup.map (Subgroup.subtype (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))\n          (Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)))) =\n        Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_34167_34523 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 :\n      Subgroup.map (Subgroup.subtype (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))\n          (Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)))) =\n        Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_34167_34523 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 :\n      Subgroup.map (Subgroup.subtype (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))\n          (Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)))) =\n        Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  have := normal_of_normalizer_normal (P.subtype (le_normalizer.trans le_normalizer))\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact hg2","formalProof":"theorem aug_34167_34523 {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (hg2 :\n      Subgroup.map (Subgroup.subtype (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))\n          (Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)))) =\n        Subgroup.normalizer (P : Subgroup G)) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  have := normal_of_normalizer_normal (P.subtype (le_normalizer.trans le_normalizer))\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact hg2"},{"ref":[33978,34600],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_34167_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_34167_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_34167_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  have := normal_of_normalizer_normal (P.subtype (le_normalizer.trans le_normalizer))\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact map_comap_eq_self (le_normalizer.trans (ge_of_eq (subtype_range _)))","formalProof":"theorem aug_34167_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  have := normal_of_normalizer_normal (P.subtype (le_normalizer.trans le_normalizer))\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact map_comap_eq_self (le_normalizer.trans (ge_of_eq (subtype_range _)))"},{"ref":[33978,34600],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_34253_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      Subgroup.Normal\n          (Subgroup.normalizer\n            (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) →\n        Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_34253_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      Subgroup.Normal\n          (Subgroup.normalizer\n            (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) →\n        Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_34253_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      Subgroup.Normal\n          (Subgroup.normalizer\n            (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) →\n        Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact map_comap_eq_self (le_normalizer.trans (ge_of_eq (subtype_range _)))","formalProof":"theorem aug_34253_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      Subgroup.Normal\n          (Subgroup.normalizer\n            (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) →\n        Subgroup.Normal (Sylow.subtype P ⋯ : Subgroup ↥(Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))))) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  simp_rw [← normalizer_eq_top, Sylow.coe_subtype, ← subgroupOf_normalizer_eq le_normalizer, ←\n    subgroupOf_normalizer_eq le_rfl, subgroupOf_self] at this\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact map_comap_eq_self (le_normalizer.trans (ge_of_eq (subtype_range _)))"},{"ref":[33978,34600],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"theorem aug_34416_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      True →\n        Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))) =\n          ⊤) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalStatement":"theorem aug_34416_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      True →\n        Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))) =\n          ⊤) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  sorry","formalProofFullname":"theorem aug_34416_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      True →\n        Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))) =\n          ⊤) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact map_comap_eq_self (le_normalizer.trans (ge_of_eq (subtype_range _)))","formalProof":"theorem aug_34416_end {G : Type u} [Group G] {p : ℕ} [Fact (Nat.Prime p)] [Finite (Sylow p G)] (P : Sylow p G)\n    (this :\n      True →\n        Subgroup.subgroupOf (Subgroup.normalizer (P : Subgroup G))\n            (Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G))) =\n          ⊤) :\n    Subgroup.normalizer (Subgroup.normalizer (P : Subgroup G)) = Subgroup.normalizer (P : Subgroup G) :=\n  by\n  rw [← subtype_range (P : Subgroup G).normalizer.normalizer, MonoidHom.range_eq_map, ← this trivial]\n  exact map_comap_eq_self (le_normalizer.trans (ge_of_eq (subtype_range _)))"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_35861 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_35861 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_35861 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  exact hg2","formalProof":"def aug_35797_35861 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  exact hg2"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  exact hg2","formalProof":"def aug_35797_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  exact hg2"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  exact hg2","formalProof":"def aug_35797_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G))\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  exact hg2"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35797_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  have := Fintype.ofFinite G\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35826_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35826_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35826_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  exact hg2","formalProof":"def aug_35826_35935 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  exact hg2"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35826_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35826_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35826_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  exact hg2","formalProof":"def aug_35826_36001 {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G)\n    (hg2 : ((p : { x // x ∈ _fvar.230376 }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  exact hg2"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"},{"ref":[35437,38176],"openedNamespaces":"[QuotientGroup, List, Function, Equiv.Finset, Finset, Equiv.Perm, Equiv, Subgroup, MulAction]","formalStatementFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalStatement":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  sorry","formalProofFullname":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'","formalProof":"def aug_35826_end {G : Type u} [Group G] [Finite G]\n    (hn : ∀ {p : ℕ} [inst : Fact (Nat.Prime p)] (P : Sylow p G), Subgroup.Normal (P : Subgroup G)) (this : Fintype G) :\n    ((p : { x // x ∈ Nat.primeFactors (Nat.card G) }) → (P : Sylow (p : ℕ) G) → ↥(P : Subgroup G)) ≃* G :=\n  by\n  set ps := (Nat.card G).primeFactors\n  let P : ∀ p, Sylow p G := default\n  have : ∀ p, Fintype (P p) := fun p ↦ Fintype.ofFinite (P p)\n  have hcomm : Pairwise fun p₁ p₂ : ps => ∀ x y : G, x ∈ P p₁ → y ∈ P p₂ → Commute x y :=\n    by\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    apply Subgroup.commute_of_normal_of_disjoint _ _ (hn (P p₁)) (hn (P p₂))\n    apply IsPGroup.disjoint_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  refine\n    MulEquiv.trans (N := ∀ p : ps, P p) ?_\n      ?_\n        -- There is only one Sylow subgroup for each p, so the inner product is trivial\n  ·\n    -- here we need to help the elaborator with an explicit instantiation\n    apply @MulEquiv.piCongrRight ps (fun p => ∀ P : Sylow p G, P) (fun p => P p) _ _\n    rintro ⟨p, hp⟩\n    haveI hp' := Fact.mk (Nat.prime_of_mem_primeFactors hp)\n    letI := unique_of_normal _ (hn (P p))\n    apply MulEquiv.piUnique\n  apply MulEquiv.ofBijective (Subgroup.noncommPiCoprod hcomm)\n  apply (Fintype.bijective_iff_injective_and_card _).mpr\n  constructor\n  · apply Subgroup.injective_noncommPiCoprod_of_independent\n    apply independent_of_coprime_order hcomm\n    rintro ⟨p₁, hp₁⟩ ⟨p₂, hp₂⟩ hne\n    haveI hp₁' := Fact.mk (Nat.prime_of_mem_primeFactors hp₁)\n    haveI hp₂' := Fact.mk (Nat.prime_of_mem_primeFactors hp₂)\n    have hne' : p₁ ≠ p₂ := by simpa using hne\n    simp only [← Nat.card_eq_fintype_card]\n    apply IsPGroup.coprime_card_of_ne p₁ p₂ hne' _ _ (P p₁).isPGroup' (P p₂).isPGroup'\n  · simp only [← Nat.card_eq_fintype_card]\n    calc\n      Nat.card (∀ p : ps, P p) = ∏ p : ps, Nat.card (P p) := Nat.card_pi\n      _ = ∏ p : ps, p.1 ^ (Nat.card G).factorization p.1 :=\n        by\n        congr 1 with ⟨p, hp⟩\n        exact @card_eq_multiplicity _ _ _ p ⟨Nat.prime_of_mem_primeFactors hp⟩ (P p)\n      _ = ∏ p ∈ ps, p ^ (Nat.card G).factorization p :=\n        (Finset.prod_finset_coe (fun p => p ^ (Nat.card G).factorization p) _)\n      _ = (Nat.card G).factorization.prod (· ^ ·) := rfl\n      _ = Nat.card G := Nat.factorization_prod_pow_eq_self Nat.card_pos.ne'"}]
